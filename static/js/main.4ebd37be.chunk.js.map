{"version":3,"sources":["Utils/regex.ts","Context/Context.tsx","styles/vars.ts","Components/BrowserNotification/BrowserNotification.style.ts","Components/BrowserNotification/BrowserNotification.tsx","Components/ErrorBoundary/ErrorBoundary.tsx","Components/I18nToggle/I18nToggle.tsx","Components/Header/Header.style.ts","Components/Header/Header.tsx","Components/Footer/Footer.style.ts","Components/Footer/Footer.tsx","Elements/Wrapper.ts","Elements/Title.ts","Elements/Label.ts","Components/SegmentInfo/SegmentInfo.style.ts","Components/SegmentInfo/SegmentInfo.tsx","Components/SegmentExp/SegmentExp.style.ts","Utils/date.ts","Components/SegmentExp/SegmentExp.tsx","Elements/IconLink.tsx","Components/Gallery/Gallery.style.ts","Components/Gallery/Gallery.tsx","Components/SegmentPortfolio/SegmentPortfolio.style.ts","Components/SegmentPortfolio/SegmentPortfolio.tsx","App.tsx","styles/global.ts","styles/theme.ts","styles/StyleProvider.tsx","index.tsx"],"names":["getLangFromUrlSearch","search","result","replace","split","map","param","match","toLowerCase","filter","length","defaultLang","I18nContext","React","createContext","lang","content","changeLang","x","getContent","Context","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDefaultLangFromUrl","window","location","setState","key","cont","state","idx","_","all","react_default","a","createElement","Provider","value","children","Component","grey1","white","lightRed","NotificationWrapper","styled","div","withConfig","displayName","componentId","Notification","BrowserNotification","isBrowserSupport","closeNotification","checkBrowser","is","chrome","handleCloseNotification","setTimeout","_this$state","context","className","onClick","contextType","ErrorBoundary","hasError","error","info","console","log","ToggleWrapper","I18nToggle","handleToggleLang","event","currentTarget","checked","CheckBox","onChange","toggle","HeaderWrapper","Link","indicatorColor","Dividend","span","MobileToggle","MobileHeader","MobileLink","links","anchor","textKey","icon","User","activeColor","Tree","Iteration","Header","currentAnchor","hash","showMobileHeader","changeAnchor","handleToggleMobileHeader","prevState","_this2","Fragment","_ref","href","UnorderedList","_ref2","cx","active","Components_I18nToggle_I18nToggle","Wrapper","Footer","now","Date","currentYear","getFullYear","releaseDate","release","date","toLocaleDateString","SegmentWrapper","vars","topBorderColor","Title","h2","Label","label","bgColor","List","Set","skills","SegmentInfo","id","MailOption","Github","target","LinkedinOption","Code","skill","index","Elements_Label","concat","ItemBase","css","_templateObject","borderColor","TimeLinePointBase","_templateObject2","GridContainer","GridItemLeft","GridItemRight","GridItemLeftShort","GridItemRightShort","TimeLine","isStart","isSingle","getDuration","from","to","_ref$lang","fromTime","getTime","year","toFixed","SegmentExp","generateDateString","stack","detail","A","NPMIcon","role","viewBox","xmlns","d","IconLink","getIconComponent","type","PersonalComputer","link","Icon","Img","img","Lightbox","Control","Gallery","showingSrcIndex","handleToggleLightbox","images","handleToPreviousImage","e","stopPropagation","handleToNextImage","playingImage","src","alt","title","CaretPrevious","CaretNext","Card","CardInfo","CardImgs","projectList","SegmentPortfolio","project","str","IconLink_IconLink","Gallery_Gallery","template","name","App","document","ErrorBoundary_ErrorBoundary","BrowserNotification_BrowserNotification","Components_Header_Header","SegmentInfo_SegmentInfo","SegmentExp_SegmentExp","SegmentPortfolio_SegmentPortfolio","Footer_Footer","createGlobalStyle","global_templateObject","theme","button","border","width","radius","padding","vertical","StyleProvider","Grommet","global","LogRocket","init","setupLogRocketReact","ReactDOM","render","Context_Context","StyleProvider_StyleProvider","src_App","getElementById"],"mappings":"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","file":"static/js/main.4ebd37be.chunk.js","sourcesContent":["export const getLangFromUrlSearch = (search: string): string => {\n  const result = search\n    .replace('?', '')\n    .split('&')\n    .map((param: string) => {\n      const match = param.toLowerCase().match(/lang=(.*)/)\n\n      if (match && match[1]) {\n        return match[1]\n      }\n\n      return ''\n    })\n    .filter((param: string) => param)\n\n  if (result && result.length > 0) {\n    return result[0]\n  }\n\n  return ''\n}\n","import React from 'react'\nimport idx from 'idx'\nimport content from './content.json'\nimport { getLangFromUrlSearch } from '../Utils/regex'\n\ninterface contentType {\n  [key: string]: any\n}\n\nexport const defaultLang: string = 'en'\nexport const I18nContext = React.createContext({\n  lang: defaultLang,\n  content: {},\n  changeLang: (x: string): void => {},\n  getContent: (x: string): string => x,\n})\n\nexport interface ContextProps {}\n\nexport default class Context extends React.Component<ContextProps, any> {\n  constructor(props: ContextProps) {\n    super(props)\n    this.state = {\n      lang: defaultLang,\n    }\n  }\n\n  componentDidMount() {\n    this.getDefaultLangFromUrl()\n  }\n\n  getDefaultLangFromUrl = () => {\n    const { search } = window.location\n    const lang = getLangFromUrlSearch(search)\n\n    if (lang) {\n      this.changeLang(lang)\n    }\n  }\n\n  changeLang = (lang: string): void => {\n    this.setState({ lang })\n  }\n\n  getContent = (key: string): string => {\n    const cont: contentType = content\n    const { lang } = this.state\n\n    return (\n      idx(cont, _ => _[key][lang]) ||\n      idx(cont, _ => _[key][defaultLang]) ||\n      idx(cont, _ => _[key].all) ||\n      null\n    )\n  }\n\n  public render() {\n    const { lang } = this.state\n\n    return (\n      <I18nContext.Provider\n        value={{\n          lang,\n          content,\n          changeLang: this.changeLang,\n          getContent: this.getContent,\n        }}\n      >\n        {this.props.children}\n      </I18nContext.Provider>\n    )\n  }\n}\n","// size\nexport const mobileWidth = '600px'\nexport const padWidth = '900px'\nexport const nbWidth = '1200px'\nexport const dtWidth = '1440px'\n\n// z-index\nexport const backgroundIndex = 0\nexport const modalIndex = 8000\nexport const loadingIndex = 10000\n\n// grey\nexport const grey1 = '#232629'\nexport const grey2 = '#51575d'\nexport const grey3 = '#788088'\nexport const grey4 = '#a9b0b7'\nexport const grey5 = '#d0d6dc'\n\n// theme color\nexport const infoColor1 = '#06886d'\nexport const infoColor1Light = 'hsla(168, 92%, 88%)'\nexport const infoColor2 = '#03CEA4'\nexport const infoColor2Light = 'hsla(168, 97%, 92%)'\nexport const infoColor3 = '#0cffcd'\nexport const expColor1 = '#F4C95D'\nexport const expColor1Light = 'hsla(43, 87%, 66%, 0.7);'\nexport const expColor2 = '#E7E393'\nexport const expColor3 = '#fffcc3'\nexport const eduColor1 = '#DC602E'\nexport const eduColor2 = '#F68E5F'\nexport const eduColor3 = '#FCB5B5'\nexport const portfolioColor1 = '#F2B5D4'\nexport const portfolioColor2 = '#F7D6E0'\nexport const portfolioColor3 = '#EFF7F6'\n\n// common color\nexport const linkColor = '#5899E2'\nexport const linkColorHover = '#65AFFF'\nexport const white = 'rgba(250, 250, 250, .9)'\nexport const lightRed = 'rgb(255, 243, 243, .3)'\nexport const transparentGrey = 'rgba(40, 40, 40, 0.9)'\n","import styled from 'styled-components/macro'\nimport {\n  transparentGrey,\n  modalIndex,\n  white,\n  linkColor,\n  linkColorHover,\n} from '../../styles/vars'\n\nexport const NotificationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: flex-start;\n  background-color: ${transparentGrey};\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${modalIndex};\n`\n\nexport const Notification = styled.div`\n  position: relative;\n  top: 10px;\n  width: 350px;\n  height: 140px;\n  padding: 10px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${white};\n  transition: top 0.3s ease;\n\n  &.close {\n    top: -140px;\n  }\n\n  p {\n    text-align: center;\n    margin: 0;\n  }\n\n  button {\n    width: 80%;\n    height: 30px;\n    border: 0;\n    background-color: ${linkColor};\n    color: ${white};\n    cursor: pointer;\n\n    &:hover {\n      background-color: ${linkColorHover};\n    }\n\n    &:active {\n      transform: translateY(5%);\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { I18nContext } from '../../Context/Context'\nimport is from 'is_js'\nimport { NotificationWrapper, Notification } from './BrowserNotification.style'\n\ntype browserNotificationState = {\n  isBrowserSupport: boolean\n  closeNotification: boolean\n}\n\nexport default class BrowserNotification extends Component<\n  {},\n  browserNotificationState\n> {\n  static contextType = I18nContext\n\n  state = {\n    isBrowserSupport: false,\n    closeNotification: false,\n  }\n\n  componentDidMount() {\n    this.checkBrowser()\n  }\n\n  checkBrowser = () => {\n    let isBrowserSupport = false\n\n    if (is.chrome('>=69')) {\n      isBrowserSupport = true\n    }\n\n    this.setState({\n      isBrowserSupport,\n    })\n  }\n\n  handleCloseNotification = () => {\n    this.setState(\n      {\n        closeNotification: true,\n      },\n      () => {\n        setTimeout(() => {\n          this.setState({\n            isBrowserSupport: true,\n          })\n        }, 300)\n      },\n    )\n  }\n\n  render() {\n    const { isBrowserSupport, closeNotification } = this.state\n    const { getContent } = this.context\n\n    if (isBrowserSupport) {\n      return null\n    }\n\n    return (\n      <NotificationWrapper>\n        <Notification className={closeNotification ? 'close' : ''}>\n          <p>{getContent('browserSupportNotice')}</p>\n          <button onClick={this.handleCloseNotification}>\n            {getContent('close')}\n          </button>\n        </Notification>\n      </NotificationWrapper>\n    )\n  }\n}\n","import React, { Component } from 'react'\n\ntype ErrorBoundaryState = {\n  hasError: boolean\n}\n\nexport default class ErrorBoundary extends Component<{}, ErrorBoundaryState> {\n  state = {\n    hasError: false,\n  }\n\n  componentDidCatch(error: Error | null, info: object) {\n    console.log('--- componentDidCatch:', { error, info })\n    this.setState({ hasError: true })\n  }\n\n  render() {\n    const { hasError } = this.state\n\n    if (hasError) {\n      return <h1>Sorry! something went wrong!</h1>\n    }\n\n    return this.props.children\n  }\n}\n","import React, { Component, FormEvent } from 'react'\nimport styled from 'styled-components/macro'\nimport { CheckBox } from 'grommet'\nimport { I18nContext } from '../../Context/Context'\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  margin: 0 10px;\n  font-size: 12px;\n\n  label > div {\n    margin: 0 5px;\n  }\n`\n\nclass I18nToggle extends Component {\n  static contextType = I18nContext\n\n  handleToggleLang = (event: FormEvent<HTMLInputElement>): void => {\n    const { changeLang } = this.context\n    if (event.currentTarget.checked) {\n      changeLang('zh')\n    } else {\n      changeLang('en')\n    }\n  }\n\n  render() {\n    const { lang } = this.context\n\n    return (\n      <ToggleWrapper>\n        English\n        <CheckBox\n          checked={lang !== 'en'}\n          onChange={this.handleToggleLang}\n          toggle\n        />\n        中文\n      </ToggleWrapper>\n    )\n  }\n}\n\nexport default I18nToggle\n","import styled from 'styled-components/macro'\nimport {\n  mobileWidth,\n  grey1,\n  grey3,\n  transparentGrey,\n  modalIndex,\n} from '../../styles/vars'\n\ntype LinkProps = {\n  indicatorColor?: string\n}\n\nexport const HeaderWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  height: 50px;\n  position: relative;\n`\nexport const Link = styled.a`\n  display: flex;\n  align-items: center;\n  margin: 0 8px;\n  cursor: pointer;\n  text-decoration: none;\n  position: relative;\n\n  & > svg {\n    margin-right: 5px;\n    width: 15px;\n    height: 15px;\n    background-color: ${(props: LinkProps) => props.indicatorColor || 'black'};\n    padding: 5px;\n    border-radius: 50%;\n    fill: white;\n    stroke: white;\n  }\n\n  & > div:after {\n    content: ' ';\n    position: absolute;\n    bottom: -3px;\n    left: 30px;\n    height: 3px;\n    width: 0;\n    background-color: ${(props: LinkProps) =>\n      props.indicatorColor || 'transparent'};\n    transition: width 0.4s ease;\n  }\n\n  &:hover,\n  &.active {\n    & > div {\n      color: ${(props: LinkProps) => props.indicatorColor || 'inherit'};\n    }\n\n    & > div:after {\n      width: calc(100% - 30px);\n    }\n  }\n\n  @media only screen and (max-width: ${mobileWidth}) {\n    display: none;\n  }\n`\n\nexport const Dividend = styled.span`\n  width: 0;\n  height: 25px;\n  border: 1px solid ${grey3};\n\n  @media only screen and (max-width: ${mobileWidth}) {\n    display: none;\n  }\n`\n\nexport const MobileToggle = styled.div`\n  display: none;\n\n  @media only screen and (max-width: ${mobileWidth}) {\n    display: block;\n    position: absolute;\n    top: 5px;\n    left: 10px;\n\n    & > svg {\n      width: 40px;\n      height: 40px;\n    }\n  }\n`\n\nexport const MobileHeader = styled.div`\n  display: none;\n\n  @media only screen and (max-width: ${mobileWidth}) {\n    display: block;\n    width: 100vw;\n    height: 100vh;\n    background-color: ${transparentGrey};\n    position: absolute;\n    top: 0;\n    left: -100%;\n    transition: left 0.5s ease;\n    z-index: ${modalIndex};\n\n    &.open {\n      left: 0;\n    }\n  }\n`\n\nexport const MobileLink = styled.a`\n  background-color: ${(props: LinkProps) =>\n    props.indicatorColor || 'transparent'};\n  color: ${grey1};\n  display: inline-block;\n  width: 100%;\n  height: 50px;\n  line-height: 50px;\n  text-align: center;\n`\n","import React, { Component } from 'react'\nimport cx from 'classnames'\nimport { infoColor1, expColor1, portfolioColor1 } from '../../styles/vars'\nimport { Iteration, Tree, User, UnorderedList } from 'grommet-icons'\nimport { I18nContext } from '../../Context/Context'\nimport I18nToggle from '../I18nToggle/I18nToggle'\nimport {\n  HeaderWrapper,\n  Link,\n  Dividend,\n  MobileToggle,\n  MobileHeader,\n  MobileLink,\n} from './Header.style'\n\nconst links = [\n  {\n    anchor: '#info',\n    textKey: 'anchorInfo',\n    icon: <User />,\n    indicatorColor: infoColor1,\n    activeColor: infoColor1,\n  },\n  {\n    anchor: '#exp',\n    textKey: 'anchorExp',\n    icon: <Tree />,\n    indicatorColor: expColor1,\n    activeColor: expColor1,\n  },\n  {\n    anchor: '#portfolio',\n    textKey: 'anchorPortfolio',\n    icon: <Iteration />,\n    indicatorColor: portfolioColor1,\n    activeColor: portfolioColor1,\n  },\n]\n\ntype HeaderState = {\n  currentAnchor?: string\n  showMobileHeader: boolean\n}\n\nclass Header extends Component<{}, HeaderState> {\n  static contextType = I18nContext\n  state = {\n    currentAnchor: window.location.hash,\n    showMobileHeader: false,\n  }\n\n  changeAnchor = (currentAnchor: string): void => {\n    this.setState({ currentAnchor })\n  }\n\n  handleToggleMobileHeader = () => {\n    this.setState(prevState => ({\n      showMobileHeader: !prevState.showMobileHeader,\n    }))\n  }\n\n  render() {\n    const { getContent } = this.context\n    const { currentAnchor, showMobileHeader } = this.state\n\n    return (\n      <React.Fragment>\n        <MobileHeader\n          className={showMobileHeader ? 'open' : ''}\n          onClick={this.handleToggleMobileHeader}\n        >\n          {links.map(({ anchor, textKey, indicatorColor }) => (\n            <MobileLink\n              key={textKey}\n              onClick={() => this.changeAnchor(anchor)}\n              href={anchor}\n              indicatorColor={indicatorColor}\n            >\n              {getContent(textKey)}\n            </MobileLink>\n          ))}\n        </MobileHeader>\n        <HeaderWrapper>\n          <MobileToggle onClick={this.handleToggleMobileHeader}>\n            <UnorderedList />\n          </MobileToggle>\n          {links.map(({ anchor, textKey, icon, indicatorColor }) => (\n            <Link\n              key={textKey}\n              className={cx({ active: anchor === currentAnchor })}\n              onClick={() => this.changeAnchor(anchor)}\n              href={anchor}\n              indicatorColor={indicatorColor}\n            >\n              {icon}\n              <div>{getContent(textKey)}</div>\n            </Link>\n          ))}\n          <Dividend />\n          <I18nToggle />\n        </HeaderWrapper>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Header\n","import styled from 'styled-components/macro'\nimport { grey3 } from '../../styles/vars'\n\nexport const Wrapper = styled.div`\n  font-size: 12px;\n  color: ${grey3};\n  width: 100%;\n  height: 40px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  span {\n    padding: 0 10px;\n  }\n`\n","import React, { Component } from 'react'\nimport { I18nContext } from '../../Context/Context'\nimport { Wrapper } from './Footer.style'\nimport release from '../../Assets/release.json'\n\ntype footerState = {\n  now: Date\n}\nexport default class Footer extends Component<{}, footerState> {\n  static contextType = I18nContext\n\n  state = {\n    now: new Date(),\n  }\n\n  render() {\n    const { getContent } = this.context\n    const { now } = this.state\n    const currentYear = now.getFullYear()\n    const releaseDate = new Date(+release.date * 1000)\n\n    return (\n      <Wrapper>\n        <span>&copy; {currentYear} Oahehc</span>\n        <span>\n          {getContent('lastUpdate')}: {releaseDate.toLocaleDateString()}\n        </span>\n      </Wrapper>\n    )\n  }\n}\n","import styled from 'styled-components/macro'\nimport * as vars from '../styles/vars'\n\ntype WrapperProps = {\n  topBorderColor?: string\n}\n\nexport const SegmentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  width: calc(100% - 20px);\n  max-width: 1400px;\n  box-sizing: border-box;\n  padding: 10px;\n  margin: 10px auto;\n  margin-bottom: 50px;\n  box-shadow: 0 1px 2px 0 ${vars.grey1};\n  border-top: 8px solid\n    ${(props: WrapperProps) => props.topBorderColor || 'transparent'};\n`\n","import styled from 'styled-components/macro'\n\nexport const Title = styled.h2`\n  font-weight: 800;\n  font-size: 20px;\n  margin: 0 0 8px 0;\n`\n","import styled from 'styled-components/macro'\nimport { grey1 } from '../styles/vars'\n\ntype LabelProps = {\n  bgColor: string\n}\nconst Label = styled.label`\n  color: ${grey1};\n  background-color: ${(props: LabelProps) => props.bgColor};\n  font-size: 12px;\n  font-weight: 600;\n  padding: 2px 5px;\n  margin: 2px;\n  border-radius: 10px;\n  display: inline-block;\n`\n\nexport default Label\n","import styled from 'styled-components/macro'\n\nexport const List = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 5px;\n\n  &.title {\n    font-weight: 800;\n    margin-bottom: 8px;\n  }\n\n  svg {\n    margin-right: 8px;\n  }\n`\nexport const Set = styled.div`\n  margin-left: 30px;\n  font-size: 16px;\n\n  & > div {\n    margin-bottom: 5px;\n  }\n\n  label {\n    margin-right: 10px;\n  }\n`\n","import React from 'react'\nimport { Github, LinkedinOption, MailOption, Code } from 'grommet-icons'\nimport { SegmentWrapper } from '../../Elements/Wrapper'\nimport { Title } from '../../Elements/Title'\nimport Label from '../../Elements/Label'\nimport { I18nContext } from '../../Context/Context'\nimport { infoColor1 } from '../../styles/vars'\nimport { List, Set } from './SegmentInfo.style'\nimport { infoColor2 } from '../../styles/vars'\n\nconst skills = [\n  'FrontEnd',\n  'Test',\n  'Tool',\n  'BackEnd',\n  'CICD',\n  'Data',\n  'Others',\n  'Lang',\n]\n\nexport default class SegmentInfo extends React.Component<{}, any> {\n  static contextType = I18nContext\n  render() {\n    const { getContent } = this.context\n\n    return (\n      <SegmentWrapper id=\"info\" topBorderColor={infoColor1}>\n        <Title>{getContent('name')}</Title>\n        <List>\n          <MailOption />\n          <a href=\"mailto:chehao@ntu.edu.tw\">chehao@ntu.edu.tw</a>\n        </List>\n        <List>\n          <MailOption />\n          <a href=\"mailto:chehao@ntu.edu.tw\">oahehc@gmail.com</a>\n        </List>\n        <List>\n          <Github />\n          <a target=\"_blank\" href=\"https://github.com/oahehc\">\n            GitHub\n          </a>\n        </List>\n        <List>\n          <LinkedinOption />\n          <a target=\"_blank\" href=\"https://tw.linkedin.com/in/oahehc\">\n            Linkedin\n          </a>\n        </List>\n        <List>\n          <Code />\n          {getContent('skill')}\n        </List>\n        <Set>\n          {skills.map((skill: string, index: number) => (\n            <div key={index}>\n              <Label bgColor={infoColor2}>{getContent(`skill${skill}`)}</Label>\n              {getContent(`skill${skill}Content`)}\n            </div>\n          ))}\n          {\n            // RoR, Phonegap, Unity, Java, Meteor, Ionic\n          }\n        </Set>\n      </SegmentWrapper>\n    )\n  }\n}\n","import styled, { css } from 'styled-components/macro'\nimport {\n  padWidth,\n  expColor1Light,\n  expColor2,\n  grey3,\n  white,\n} from '../../styles/vars'\n\ntype itemProps = {\n  borderColor?: string\n  bgColor?: string\n}\nconst ItemBase = css`\n  border-top: 5px solid ${expColor2};\n  border-top-color: ${(props: itemProps) => props.borderColor || expColor2};\n  background-color: ${(props: itemProps) => props.bgColor || white};\n  box-shadow: 0 0 2px 0 ${grey3};\n  padding: 10px;\n\n  & > div:nth-child(1) {\n    font-size: 14px;\n    font-weight: 300;\n\n    a {\n      margin-left: 3px;\n      font-weight: 800;\n    }\n  }\n\n  & > div:nth-child(2) {\n    font-weight: 800;\n    margin-bottom: 15px;\n  }\n\n  & > div:nth-child(3) > div {\n    margin-bottom: 10px;\n\n    & > p {\n      margin: 0;\n    }\n\n    & > div {\n      padding-top: 3px;\n      font-size: 16px;\n\n      :before {\n        content: '➥';\n        margin: 0 5px;\n      }\n    }\n  }\n`\nconst TimeLinePointBase = css`\n  left: -11px;\n  border-radius: 50%;\n  border: 5px solid ${expColor1Light};\n  background-color: white;\n  content: '';\n  width: 20px;\n  height: 20px;\n  position: absolute;\n`\n\nexport const GridContainer = styled.div`\n  display: grid;\n  grid-template-columns: 2fr 80px 3fr;\n  /* grid-template-rows: auto auto auto; */\n  grid-auto-rows: minmax(10px, auto);\n\n  @media only screen and (max-width: ${padWidth}) {\n    display: block;\n\n    & > div {\n      margin-bottom: 10px;\n    }\n  }\n`\nexport const GridItemLeft = styled.div`\n  ${ItemBase}\n  grid-column: 1 / span 1;\n  grid-row: 2 / span 2;\n`\nexport const GridItemRight = styled.div`\n  ${ItemBase}\n  grid-column: 3 / span 1;\n  grid-row: 1 / span 2;\n`\nexport const GridItemLeftShort = styled.div`\n  ${ItemBase}\n  grid-column: 1 / span 1;\n  grid-row: 2 / span 1;\n`\nexport const GridItemRightShort = styled.div`\n  ${ItemBase}\n  grid-column: 3 / span 1;\n  grid-row: 1 / span 1;\n`\nexport const GridItemLeftLarge = styled.div`\n  ${ItemBase}\n  grid-column: 1 / span 1;\n  grid-row: 2 / span 3;\n`\nexport const GridItemRightLarge = styled.div`\n  ${ItemBase}\n  grid-column: 3 / span 1;\n  grid-row: 1 / span 3;\n`\n\ntype timeLineProps = {\n  isStart?: boolean\n  isSingle?: boolean\n}\nexport const TimeLine = styled.div`\n  grid-column: 2 / span 1;\n  grid-row: 1 / span 3;\n  justify-self: center;\n  align-self: end;\n  position: relative;\n  height: ${(props: timeLineProps) =>\n    props.isStart ? 'calc(100% - 10px)' : '100%'};\n  width: 8px;\n  background-color: ${expColor1Light};\n\n  &:before {\n    top: ${(props: timeLineProps) => (props.isStart ? '-5px' : '5px')};\n    ${TimeLinePointBase}\n  }\n\n  &:after {\n    top: 35%;\n    ${TimeLinePointBase}\n    display: ${(props: timeLineProps) => (props.isSingle ? 'none' : 'block')};\n  }\n\n  @media only screen and (max-width: ${padWidth}) {\n    display: none;\n  }\n`\n","import { defaultLang } from '../Context/Context'\n\ntype durationInputType = {\n  from: string\n  to: string\n  lang?: string\n}\nexport const getDuration = ({\n  from,\n  to,\n  lang = defaultLang,\n}: durationInputType): string => {\n  const oneMonth = 60 * 60 * 24 * 30 * 1000\n  const fromTime = new Date(from).getTime()\n  const toTime = to === 'now' ? Date.now() - oneMonth : new Date(to).getTime()\n  const timeBetween = toTime - fromTime\n  const year = timeBetween / 1000 / 60 / 60 / 24 / 365\n\n  if (year < 1) {\n    return `${(year * 12 + 1).toFixed(0)} ${lang === 'en' ? 'months' : '個月'}`\n  }\n\n  return `${(year + 1 / 12).toFixed(1)} ${lang === 'en' ? 'years' : '年'}`\n}\n","import React from 'react'\nimport { expColor1, eduColor2 } from '../../styles/vars'\nimport {\n  GridContainer,\n  GridItemLeft,\n  GridItemRight,\n  GridItemLeftShort,\n  GridItemRightShort,\n  GridItemLeftLarge,\n  GridItemRightLarge,\n  TimeLine,\n} from './SegmentExp.style'\nimport { lightRed } from '../../styles/vars'\nimport { SegmentWrapper } from '../../Elements/Wrapper'\nimport { Title } from '../../Elements/Title'\nimport Label from '../../Elements/Label'\nimport { I18nContext } from '../../Context/Context'\nimport { getDuration } from '../../Utils/date'\nimport { expColor3 } from '../../styles/vars'\n\nexport default class SegmentExp extends React.Component<{}, any> {\n  static contextType = I18nContext\n\n  generateDateString = (from: string, to: string): string => {\n    const { lang } = this.context\n\n    return `${from} ~ ${to} (${getDuration({ from, to, lang })}) @`\n  }\n\n  render() {\n    const { getContent } = this.context\n\n    return (\n      <SegmentWrapper id=\"exp\" topBorderColor={expColor1}>\n        <Title>{getContent('expTitle')}</Title>\n        <GridContainer>\n          <TimeLine isStart />\n          <GridItemRight>\n            <div>\n              {this.generateDateString('2018/8', 'now')}\n              <a href=\"https://www.cnyes.com\" target=\"_blank\">\n                {getContent('anue')}\n              </a>\n            </div>\n            <div>{getContent('anueJobTitle')}</div>\n            <div>\n              <div>\n                {getContent('anueJobStack').map(\n                  (stack: string, index: number) => (\n                    <Label key={index} bgColor={expColor3}>\n                      {stack}\n                    </Label>\n                  ),\n                )}\n                {getContent('anueJobContent').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n            </div>\n          </GridItemRight>\n          <GridItemLeft>\n            <div>\n              {this.generateDateString('2018/4', '2018/7')}\n              <a href=\"https://pebblar.com/\" target=\"_blank\">\n                pebblar\n              </a>\n            </div>\n            <div>{getContent('pebblarJobTitle')}</div>\n            <div>\n              <div>\n                {getContent('pebblarJobStack').map(\n                  (stack: string, index: number) => (\n                    <Label key={index} bgColor={expColor3}>\n                      {stack}\n                    </Label>\n                  ),\n                )}\n                {getContent('pebblarJobContent').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n            </div>\n          </GridItemLeft>\n        </GridContainer>\n        <GridContainer>\n          <TimeLine />\n          <GridItemRight>\n            <div>\n              {this.generateDateString('2017/11', '2018/3')}\n              <a href=\"https://www.deepblu.com/discover/live\" target=\"_blank\">\n                deepblu\n              </a>\n            </div>\n            <div>{getContent('deepbluJobTitle')}</div>\n            <div>\n              <div>\n                {getContent('deepbluJobStack1').map(\n                  (stack: string, index: number) => (\n                    <label key={index}>{stack}</label>\n                  ),\n                )}\n                {getContent('deepbluJobContent1').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n              <div>\n                {getContent('deepbluJobStack2').map(\n                  (stack: string, index: number) => (\n                    <label key={index}>{stack}</label>\n                  ),\n                )}\n                {getContent('deepbluJobContent2').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n            </div>\n          </GridItemRight>\n          <GridItemLeft borderColor={eduColor2} bgColor={lightRed}>\n            <div>{this.generateDateString('2017/4', '2017/7')}</div>\n            <div>{getContent('uxCourse')}</div>\n            <div>\n              <div>{getContent('uxCourseContent')}</div>\n            </div>\n          </GridItemLeft>\n        </GridContainer>\n        <GridContainer>\n          <TimeLine />\n          <GridItemRight>\n            <div>\n              {this.generateDateString('2016/6', '2017/10')}\n              <a href=\"http://www.flow.tw/\" target=\"_blank\">\n                {getContent('flow')}\n              </a>\n            </div>\n            <div>{getContent('flowJobTitle')}</div>\n            <div>\n              <div>\n                {getContent('flowJobStack1').map(\n                  (stack: string, index: number) => (\n                    <label key={index}>{stack}</label>\n                  ),\n                )}\n                {getContent('flowJobContent1').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n              <div>\n                {getContent('flowJobStack2').map(\n                  (stack: string, index: number) => (\n                    <label key={index}>{stack}</label>\n                  ),\n                )}\n                {getContent('flowJobContent2').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n              <div>\n                {getContent('flowJobStack3').map(\n                  (stack: string, index: number) => (\n                    <label key={index}>{stack}</label>\n                  ),\n                )}\n                {getContent('flowJobContent3').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n            </div>\n          </GridItemRight>\n          <GridItemLeft>\n            <div>\n              {this.generateDateString('2009/12', '2016/5')}\n              <a href=\"https://www.asus.com/tw/\" target=\"_blank\">\n                {getContent('asus')}\n              </a>\n            </div>\n            <div>{getContent('asusJobTitle')}</div>\n            <div>\n              <div>\n                <p>{getContent('asusJobItem1')}</p>\n                {getContent('asusJobContent1').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n              <div>\n                <p>{getContent('asusJobItem2')}</p>\n                {getContent('asusJobContent2').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n              <div>\n                <p>{getContent('asusJobItem3')}</p>\n                {getContent('asusJobContent3').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n            </div>\n          </GridItemLeft>\n        </GridContainer>\n        <GridContainer>\n          <TimeLine />\n          <GridItemRightShort>\n            <div>\n              {this.generateDateString('2008/10', '2009/9')}\n              {getContent('military')}\n            </div>\n            <div>{getContent('militaryJobTitle')}</div>\n          </GridItemRightShort>\n          <GridItemLeftShort borderColor={eduColor2} bgColor={lightRed}>\n            <div>\n              {this.generateDateString('2006/9', '2008/6')}\n              {getContent('ntu')}\n            </div>\n            <div>{getContent('mba')}</div>\n            <div>\n              <div>\n                <p>{getContent('mbaTitle')}</p>\n              </div>\n            </div>\n          </GridItemLeftShort>\n        </GridContainer>\n        <GridContainer>\n          <TimeLine />\n          <GridItemRightShort borderColor={eduColor2} bgColor={lightRed}>\n            <div>\n              {this.generateDateString('2002/9', '2006/6')}\n              {getContent('ntu')}\n            </div>\n            <div>{getContent('math')}</div>\n          </GridItemRightShort>\n          <GridItemLeft borderColor={eduColor2} bgColor={lightRed}>\n            <div>{getContent('onlineCourse')}</div>\n            <div>{getContent('onlineCoursePlatform')}</div>\n            <div>\n              <div>\n                {getContent('onlineCourseContent').map(\n                  (detail: string, index: number) => (\n                    <div key={index}>{detail}</div>\n                  ),\n                )}\n              </div>\n            </div>\n          </GridItemLeft>\n        </GridContainer>\n      </SegmentWrapper>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Github, PersonalComputer } from 'grommet-icons'\nimport styled from 'styled-components/macro'\nimport { grey1 } from '../styles/vars'\n\nconst A = styled.a`\n  & > svg {\n    width: 24px;\n    height: 24px;\n  }\n\n  &:hover {\n    & > svg {\n      stroke: ${grey1};\n      fill: ${grey1};\n    }\n  }\n`\n\nconst NPMIcon = () => (\n  <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n    <title>NPM icon</title>\n    <path d=\"M0 7.334v8h6.666v1.332H12v-1.332h12v-8H0zm6.666 6.664H5.334v-4H3.999v4H1.335V8.667h5.331v5.331zm4 0v1.336H8.001V8.667h5.334v5.332h-2.669v-.001zm12.001 0h-1.33v-4h-1.336v4h-1.335v-4h-1.33v4h-2.671V8.667h8.002v5.331z\" />\n    <path d=\"M10.665 10H12v2.667h-1.335V10z\" />\n  </svg>\n)\n\ntype iconLinkPropType = {\n  type: string\n  link: string\n}\n\nexport default class IconLink extends Component<iconLinkPropType> {\n  getIconComponent = () => {\n    const { type } = this.props\n\n    switch (type) {\n      case 'github':\n        return Github\n      case 'preview':\n        return PersonalComputer\n      case 'npm':\n        return NPMIcon\n      default:\n        return ''\n    }\n  }\n\n  render() {\n    const { link } = this.props\n    const Icon = this.getIconComponent()\n\n    return (\n      <A target=\"_blank\" href={link}>\n        <Icon />\n      </A>\n    )\n  }\n}\n","import styled from 'styled-components/macro'\nimport { transparentGrey, modalIndex } from '../../styles/vars'\n\nexport const Img = styled.img`\n  height: 120px;\n  cursor: pointer;\n  transition: transform 0.5s ease;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`\n\nexport const Lightbox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${transparentGrey};\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${modalIndex};\n\n  img {\n    max-width: 80%;\n    max-height: 80%;\n  }\n`\n\nexport const Control = styled.div`\n  width: 100px;\n  height: 200px;\n  max-width: 10%;\n  max-height: 80%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  &:hover {\n    background-color: ${transparentGrey};\n  }\n`\n","import React, { Component, MouseEvent } from 'react'\nimport { CaretNext, CaretPrevious } from 'grommet-icons'\nimport { Img, Lightbox, Control } from './Gallery.style'\n\ntype galleryProps = {\n  images: { src: string; alt: string }[]\n}\ntype galleryState = {\n  showingSrcIndex: number\n}\n\nexport default class Gallery extends Component<galleryProps, galleryState> {\n  state = {\n    showingSrcIndex: -1,\n  }\n\n  handleToggleLightbox = (index: number) => {\n    const { images } = this.props\n\n    this.setState({\n      showingSrcIndex: index >= images.length ? -1 : index,\n    })\n  }\n\n  handleToPreviousImage = (e: MouseEvent) => {\n    e.stopPropagation()\n    const { showingSrcIndex } = this.state\n\n    this.handleToggleLightbox(showingSrcIndex - 1)\n  }\n\n  handleToNextImage = (e: MouseEvent) => {\n    e.stopPropagation()\n    const { showingSrcIndex } = this.state\n\n    this.handleToggleLightbox(showingSrcIndex + 1)\n  }\n\n  render() {\n    const { images } = this.props\n    const { showingSrcIndex } = this.state\n    const playingImage = showingSrcIndex > -1 ? images[showingSrcIndex] : null\n\n    return (\n      <React.Fragment>\n        {images.map(({ src, alt }: any, index: number) => (\n          <Img\n            key={index}\n            src={src}\n            alt={alt}\n            title={alt}\n            onClick={() => this.handleToggleLightbox(index)}\n          />\n        ))}\n        {playingImage && (\n          <Lightbox onClick={() => this.handleToggleLightbox(-1)}>\n            <Control onClick={this.handleToPreviousImage}>\n              <CaretPrevious />\n            </Control>\n            <img\n              src={playingImage.src}\n              alt={playingImage.alt}\n              title={playingImage.alt}\n            />\n            <Control onClick={this.handleToNextImage}>\n              <CaretNext />\n            </Control>\n          </Lightbox>\n        )}\n      </React.Fragment>\n    )\n  }\n}\n","import styled from 'styled-components/macro'\nimport { padWidth, grey2 } from '../../styles/vars'\n\nexport const Card = styled.div`\n  margin: 10px;\n  padding: 5px;\n  box-shadow: 0 0 2px 0 ${grey2};\n  display: flex;\n\n  h4 {\n    margin: 10px;\n    display: flex;\n    justify-content: flex-start;\n    align-items: center;\n\n    a {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      margin: 0 5px;\n    }\n  }\n\n  p {\n    margin: 10px;\n    font-size: 14px;\n    font-style: italic;\n  }\n\n  @media only screen and (max-width: ${padWidth}) {\n    flex-direction: column;\n  }\n`\n\nexport const CardInfo = styled.div`\n  width: 520px;\n  min-width: 520px;\n  max-width: 100%;\n\n  @media only screen and (max-width: ${padWidth}) {\n    min-width: 100%;\n  }\n`\nexport const CardImgs = styled.div`\n  flex: 1;\n  display: flex;\n  flex-wrap: wrap;\n  overflow: hidden;\n`\n","import React from 'react'\nimport { portfolioColor1 } from '../../styles/vars'\nimport { SegmentWrapper } from '../../Elements/Wrapper'\nimport { Title } from '../../Elements/Title'\nimport IconLink from '../../Elements/IconLink'\nimport Label from '../../Elements/Label'\nimport Gallery from '../Gallery/Gallery'\nimport { I18nContext } from '../../Context/Context'\nimport { Card, CardInfo, CardImgs } from './SegmentPortfolio.style'\nimport { portfolioColor2 } from '../../styles/vars'\n\nconst projectList = [\n  'Shorten',\n  'MusicBook',\n  'SpeakTrainer',\n  'Onboard',\n  'RestaurantLineBot',\n  'Lottery',\n  'Serverless',\n  'DL',\n  'Resume',\n]\n\nexport default class SegmentPortfolio extends React.Component<{}, any> {\n  static contextType = I18nContext\n\n  render() {\n    const { getContent } = this.context\n\n    return (\n      <SegmentWrapper id=\"portfolio\" topBorderColor={portfolioColor1}>\n        <Title>{getContent('anchorPortfolio')}</Title>\n        {projectList.map(project => (\n          <Card key={project}>\n            <CardInfo>\n              {getContent(`portfolio${project}Stack`).map(\n                (str: string, index: number) => (\n                  <Label key={index} bgColor={portfolioColor2}>\n                    {str}\n                  </Label>\n                ),\n              )}\n              <h4>\n                {getContent(`portfolio${project}`)}\n                {getContent(`portfolio${project}Link`).map(\n                  ({ type, link }: any) => (\n                    <IconLink key={type} type={type} link={link} />\n                  ),\n                )}\n              </h4>\n              <p>{getContent(`portfolio${project}Content`)}</p>\n            </CardInfo>\n            {getContent(`portfolio${project}Images`) && (\n              <CardImgs>\n                <Gallery images={getContent(`portfolio${project}Images`)} />\n              </CardImgs>\n            )}\n          </Card>\n        ))}\n        <Card>\n          <div>\n            {getContent('portfolioTemplateStack').map(\n              (str: string, index: number) => (\n                <Label key={index} bgColor={portfolioColor2}>\n                  {str}\n                </Label>\n              ),\n            )}\n            {getContent('portfolioTemplate').map(\n              (template: any, index: number) => (\n                <h4 key={index}>\n                  {template.name}\n                  <IconLink type=\"github\" link={template.link} />\n                </h4>\n              ),\n            )}\n            <p>{getContent('portfolioTemplateContent')}</p>\n          </div>\n        </Card>\n      </SegmentWrapper>\n    )\n  }\n}\n\n/*\n      <dt><a href=\"https://s3-ap-northeast-1.amazonaws.com/oahehc/webClock/index.html\">WebClock</a></dt>\n      <dd><span class=\"skill\">Meteor</span> Online clock</dd>\n      <!--android APP-->\n      <dt><a href=\"https://play.google.com/store/apps/details?id=com.ionicframework.oahehc.HoldemDashboard\">Holdem</a></dt>\n      <dd><span class=\"skill\">Ionic</span> App for showing big/small blind for Texas hold'em poker.</dd>\n      <dt><a href=\"https://play.google.com/store/apps/details?id=com.ionicframework.oahehc.mahjong\">Mahjong</a></dt>\n      <dd><span class=\"skill\">Ionic</span> App for record status and score when playing Mahjong.</dd>\n      <!--\n      <dt><a href=\"http://movieranking-movieranking.rhcloud.com/\">MovieRanking</a></dt>\n      <dd><span class=\"skill\">php, mysql</span> Web crawler for search multiple movie ranking data</dd>\n      <dt><a href=\"http://blog-oahehc.rhcloud.com/vocabulary.php\">Vocabulary</a></dt>\n      <dd><span class=\"skill\">jquery mobile, php, mysql</span> English learning tool</dd>\n      <dt><a href=\"http://tool-oahehc.rhcloud.com/checklist.php\">Checklist</a> *</dt>\n      <dd><span class=\"skill\">php, mysql</span> Checklist for mangememt work staff.</dd>\n      <dt><a href=\"http://tool-oahehc.rhcloud.com/recorder.php\">Recorder</a> *</dt>\n      <dd><span class=\"skill\">php, mysql, google chart api</span> Set weekly/monthly goal and analysis accomplish rate.</dd>\n      <dt><a href=\"http://tool-oahehc.rhcloud.com/financer.php\">Financer</a> *</dt>\n      <dd><span class=\"skill\">php, mysql, google chart api</span> Record and analysis income/expense, setting budget to control\n        monthly expense.</dd>\n      <dd><span class=\"label label-default small\">* Test account: id=pw=test</span></dd>\n      <dt><a href=\"http://oahehc.comoj.com/\">Blog</a></dt>\n      <dd>Personal blog created by wordpress with self-designed theme.</dd>\n      <dt><a href=\"http://oahehc.comoj.com/travel_data.php\">TravelData</a></dt>\n      <dd>Database for travel inforamtion(restaurant,landscape,hotel, etc..).</dd>\n      <dt><a href=\"http://oahehc.comoj.com/wordpress/854\">Exercise</a></dt>\n      <dd>App Timer for workout.</dd>\n      <dt><a href=\"http://oahehc.comoj.com/wordpress/839\">Decision</a></dt>\n      <dd>Drawing App.</dd>\n      <dt><a href=\"http://oahehc.comoj.com/wordpress/859\">Scoreboard</a></dt>\n      <dd>App for recording game score.</dd>\n      <dt><a href=\"http://oahehc.comoj.com/wordpress/865\">Blind</a></dt>\n      <dd>App for showing big/small blind for Texas hold'em poker.</dd>\n-->\n*/\n","import React, { Component } from 'react'\nimport { I18nContext } from './Context/Context'\nimport BrowserNotification from './Components/BrowserNotification/BrowserNotification'\nimport ErrorBoundary from './Components/ErrorBoundary/ErrorBoundary'\nimport Header from './Components/Header/Header'\nimport Footer from './Components/Footer/Footer'\nimport SegmentInfo from './Components/SegmentInfo/SegmentInfo'\nimport SegmentExp from './Components/SegmentExp/SegmentExp'\nimport SegmentPortfolio from './Components/SegmentPortfolio/SegmentPortfolio'\n\nclass App extends Component {\n  static contextType = I18nContext\n\n  componentDidUpdate() {\n    const { getContent } = this.context\n    const title = `${getContent('name')} | ${getContent('resume')}`\n\n    if (document.title !== title) {\n      document.title = title\n    }\n  }\n\n  render() {\n    return (\n      <ErrorBoundary>\n        <BrowserNotification />\n        <Header />\n        <SegmentInfo />\n        <SegmentExp />\n        <SegmentPortfolio />\n        <Footer />\n      </ErrorBoundary>\n    )\n  }\n}\n\nexport default App\n","import { createGlobalStyle } from 'styled-components/macro'\nimport * as vars from './vars'\n\nexport default createGlobalStyle`\n  * {\n    font-family: -apple-system, 'BlinkMacSystemFont', 'Segoe UI', 'Roboto', 'Oxygen',\n      'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n      'sans-serif', 'Microsoft Jhenghei', 'Pingfang TC';\n    color: ${vars.grey1};\n  }\n  \n  html,\n  body {\n    height: 100vh;\n    width: 100vw;\n    overflow: auto;\n    -ms-overflow-style: scrollbar;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    background-color: ${vars.white};\n  }\n\n  a {\n    text-decoration: none;\n    color: ${vars.linkColor};\n\n    &:hover {\n      color: ${vars.linkColorHover};\n    }\n\n    &:active {\n      color: ${vars.linkColor};\n      transform: translateY(5%);\n    }\n  }\n`\n","export default {\n  button: {\n    border: {\n      width: '1px',\n      radius: '3px',\n    },\n    padding: {\n      vertical: '0',\n    },\n  },\n}\n","import React, { Component } from 'react'\nimport { Grommet } from 'grommet'\nimport 'normalize.css/normalize.css'\nimport GlobalStyle from './global'\nimport theme from './theme'\n\nexport default class StyleProvider extends Component {\n  render() {\n    return (\n      <Grommet theme={theme}>\n        {this.props.children}\n        <GlobalStyle />\n      </Grommet>\n    )\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport LogRocket from 'logrocket'\nimport setupLogRocketReact from 'logrocket-react'\nimport App from './App'\nimport StyleProvider from './styles/StyleProvider'\nimport Context from './Context/Context'\n\nLogRocket.init('oahehc/resume-r1lhl')\nsetupLogRocketReact(LogRocket)\n\nReactDOM.render(\n  <Context>\n    <StyleProvider>\n      <App />\n    </StyleProvider>\n  </Context>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}